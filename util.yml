helper:
  dev_branches: (( |b|->.helper.branchset("standard", [ "head" ], b ) ))
  main_branch: (( |b|->.helper.branchset("standard", [ "head", "rel", "pull" ], [ b ] ) ))

  branchset: (( |n,j,b|-> *.helper.templates.branchset ))

  util:
    notify:
      slack:
        default_channel: 'internal_scp_workspace'
        channel_cfgs:
          internal_scp_workspace:
            channel_name: 'C9CEBQPGE' #sap-tech-gardener
            slack_cfg_name: 'scp_workspace'
  templates:
    branchset:
      <<: (( &template ))
      branches: (( b ))
      inherit:  (( { .settings.pipeline = eval("*.helper.templates." n) } ))

    jobs:
      head:
        <<: (( &template ))
        head-update:
          traits:
            component_descriptor: ~
      pull:
        <<: (( &template ))
        pull-request:
          traits:
            pull-request: ~
            component_descriptor: ~
      rel:
        <<: (( &template ))
        release:
          traits:
            version:
              preprocess: 'finalize'
            release:
              nextversion: 'bump_minor'
            component_descriptor: ~
            <<: (( helper.util.notify )) 

    standard:
      <<: (( &template ))
      base_definition:
        repo: ~
        traits:
          version:
            preprocess: inject-branch-name
            inject_effective_version: true
        steps:
          check:
            image: 'golang:1.16.2'
          test:
            image: 'golang:1.16.2'
          build:
            image: 'golang:1.16.2'
            output_dir: 'binary'
      jobs: (( sum[j|{}|s,e|-> s eval("*.helper.templates.jobs." e)] ))
